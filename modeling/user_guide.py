"""
Gu√≠a de Usuario - Modelo de Predicci√≥n de Ataques Ransomware

Este m√≥dulo proporciona una gu√≠a completa para utilizar el sistema de predicci√≥n
de ataques ransomware, incluyendo explicaciones sobre cada funci√≥n, par√°metros
y c√≥mo interpretar los resultados.
"""

import streamlit as st
import pandas as pd
import numpy as np
import plotly.graph_objects as go
from datetime import datetime, timedelta

def show_user_guide():
    """
    Muestra la gu√≠a de usuario completa para el modelo de predicci√≥n de ransomware.
    """
    # Estilos CSS para mejorar la legibilidad en tema oscuro
    st.markdown("""
    <style>
    .guide-section {
        padding: 10px;
        margin-bottom: 20px;
        border-radius: 5px;
        background-color: rgba(70, 70, 70, 0.2);
        border-left: 3px solid rgba(100, 180, 255, 0.8);
    }
    .guide-header {
        color: rgba(100, 180, 255, 0.9);
        margin-bottom: 10px;
    }
    .guide-subheader {
        color: rgba(150, 200, 255, 0.9);
        margin-top: 15px;
        margin-bottom: 8px;
    }
    .guide-code {
        background-color: rgba(50, 50, 50, 0.5);
        padding: 10px;
        border-radius: 5px;
        font-family: monospace;
        margin: 10px 0;
    }
    .guide-tip {
        background-color: rgba(70, 100, 150, 0.2);
        padding: 10px;
        border-radius: 5px;
        border-left: 3px solid rgba(100, 200, 150, 0.8);
        margin: 10px 0;
    }
    .guide-warning {
        background-color: rgba(150, 100, 70, 0.2);
        padding: 10px;
        border-radius: 5px;
        border-left: 3px solid rgba(255, 150, 100, 0.8);
        margin: 10px 0;
    }
    
    /* Estilos adicionales para arreglar los encabezados con fondo blanco */
    h1, h2, h3, h4, h5, h6 {
        color: #ffffff !important;
        background-color: transparent !important;
    }
    
    /* Estilos para los encabezados de secci√≥n numerados */
    .block-container div[data-testid="stVerticalBlock"] > div:nth-child(n) > div:nth-child(1) > div:nth-child(1) > div:nth-child(1) > div:nth-child(1) > div:nth-child(1) h2 {
        color: #ffffff !important;
        background-color: rgba(70, 70, 70, 0.5) !important;
        padding: 10px !important;
        border-radius: 5px !important;
        border-left: 3px solid rgba(100, 180, 255, 0.8) !important;
    }
    
    /* Estilos para los contenedores de entrada */
    div[data-baseweb="input"] {
        background-color: rgba(70, 70, 70, 0.3) !important;
    }
    
    /* Estilos para los selectores */
    div[data-baseweb="select"] {
        background-color: rgba(70, 70, 70, 0.3) !important;
    }
    
    /* Estilos para los sliders */
    div[data-testid="stSlider"] {
        background-color: rgba(70, 70, 70, 0.2) !important;
        padding: 10px !important;
        border-radius: 5px !important;
    }
    
    /* Estilos espec√≠ficos para los textos en columnas que tienen fondo blanco */
    .row-widget.stHorizontal div {
        background-color: transparent !important;
    }
    
    /* Estilos para los textos en columnas */
    .row-widget.stHorizontal div p {
        color: #ffffff !important;
        background-color: transparent !important;
    }
    
    /* Estilos para los textos descriptivos */
    .element-container div[data-testid="stMarkdownContainer"] p {
        color: #ffffff !important;
        background-color: transparent !important;
    }
    
    /* Estilos para los textos en columnas espec√≠ficas */
    div[data-testid="column"] div[data-testid="stMarkdownContainer"] {
        background-color: rgba(70, 70, 70, 0.3) !important;
        padding: 10px !important;
        border-radius: 5px !important;
        margin-bottom: 10px !important;
    }
    
    /* Estilos para los textos en columnas espec√≠ficas */
    div[data-testid="column"] div[data-testid="stMarkdownContainer"] p {
        color: #ffffff !important;
    }
    
    /* Estilos para todos los textos en la aplicaci√≥n */
    p, li, span {
        color: #ffffff !important;
    }
    
    /* Estilos para los fondos blancos en columnas */
    div[data-testid="column"] {
        background-color: transparent !important;
    }
    </style>
    """, unsafe_allow_html=True)
    
    st.title(" Gu√≠a de Usuario - Modelo de Predicci√≥n de Ransomware")
    
    st.markdown("""
    Esta gu√≠a te ayudar√° a entender c√≥mo utilizar el sistema de predicci√≥n de ataques ransomware,
    explicando cada funci√≥n, sus par√°metros y c√≥mo interpretar los resultados.
    """)
    
    # Crear un √≠ndice de contenidos en el √°rea principal
    st.markdown("## Contenido")
    
    # Crear columnas para mostrar el √≠ndice de forma m√°s compacta
    col1, col2 = st.columns(2)
    
    sections = {
        "introduccion": "1Ô∏è‚É£ Introducci√≥n",
        "flujo_trabajo": "2Ô∏è‚É£ Flujo de Trabajo",
        "carga_datos": "3Ô∏è‚É£ Carga de Datos",
        "preparacion_datos": "4Ô∏è‚É£ Preparaci√≥n de Datos",
        "entrenamiento": "5Ô∏è‚É£ Entrenamiento del Modelo",
        "prediccion": "6Ô∏è‚É£ Generaci√≥n de Predicciones",
        "evaluacion": "7Ô∏è‚É£ Evaluaci√≥n del Modelo",
        "visualizacion": "8Ô∏è‚É£ Visualizaci√≥n de Resultados",
        "interpretacion": "9Ô∏è‚É£ Interpretaci√≥n de Resultados",
        "optimizaciones": "üîß Optimizaciones Avanzadas",
        "faq": "‚ùì Preguntas Frecuentes"
    }
    
    # Dividir las secciones entre las dos columnas
    items = list(sections.items())
    mid = len(items) // 2
    
    with col1:
        for key, title in items[:mid]:
            st.markdown(f"- [{title}](#{key})")
    
    with col2:
        for key, title in items[mid:]:
            st.markdown(f"- [{title}](#{key})")
    
    # A√±adir un separador para mejorar la legibilidad
    st.markdown("---")
    
    # Introducci√≥n
    st.markdown(f'<div class="guide-section">', unsafe_allow_html=True)
    st.header("1Ô∏è‚É£ Introducci√≥n", anchor="introduccion")
    st.markdown("""
    El Sistema de Predicci√≥n de Ataques Ransomware es una herramienta avanzada dise√±ada para pronosticar
    el n√∫mero esperado de ataques de ransomware en los pr√≥ximos d√≠as o semanas. Utiliza modelos de series
    temporales basados en Prophet con optimizaciones avanzadas para proporcionar predicciones precisas
    y confiables.
    
    ### ¬øQu√© es el ransomware?
    
    El ransomware es un tipo de malware que cifra los archivos de la v√≠ctima y exige un rescate para restaurar
    el acceso. Los ataques de ransomware se han vuelto cada vez m√°s frecuentes y sofisticados, representando
    una amenaza significativa para organizaciones de todos los tama√±os.
    
    ### ¬øPor qu√© es importante predecir los ataques?
    
    Predecir tendencias futuras de ataques ransomware permite:
    
    - **Planificaci√≥n proactiva**: Asignar recursos de seguridad cuando m√°s se necesitan
    - **Gesti√≥n de riesgos**: Evaluar la exposici√≥n potencial y tomar medidas preventivas
    - **Preparaci√≥n de respuesta**: Garantizar que los equipos est√©n listos durante per√≠odos de alto riesgo
    - **Justificaci√≥n de inversiones**: Proporcionar datos para respaldar decisiones de inversi√≥n en seguridad
    
    ### Caracter√≠sticas principales:
    
    - **Transformaciones √≥ptimas de datos**: Aplicaci√≥n autom√°tica de transformaciones logar√≠tmicas para mejorar la precisi√≥n.
    - **Feature Engineering avanzado**: Generaci√≥n autom√°tica de caracter√≠sticas temporales y externas relevantes.
    - **Optimizaci√≥n bayesiana de hiperpar√°metros**: B√∫squeda eficiente de la mejor configuraci√≥n del modelo.
    - **Calibraci√≥n de intervalos de predicci√≥n**: Garantiza que los intervalos de confianza sean precisos.
    - **Interfaz visual interactiva**: Visualizaci√≥n clara de predicciones y resultados.
    
    Este sistema est√° dise√±ado para ser utilizado por analistas de seguridad, equipos de respuesta a incidentes
    y responsables de la toma de decisiones en ciberseguridad para anticipar y prepararse mejor ante posibles
    oleadas de ataques de ransomware.
    """)
    st.markdown('</div>', unsafe_allow_html=True)
    
    # Flujo de trabajo
    st.markdown(f'<div class="guide-section">', unsafe_allow_html=True)
    st.header("2Ô∏è‚É£ Flujo de Trabajo", anchor="flujo_trabajo")
    st.markdown("""
    El sistema de predicci√≥n de ataques ransomware sigue un flujo de trabajo estructurado que gu√≠a al usuario
    a trav√©s de todo el proceso, desde la carga de datos hasta la interpretaci√≥n de resultados. A continuaci√≥n,
    se detalla cada paso del proceso:
    """)
    
    # Crear diagrama de flujo visual
    col1, col2, col3, col4 = st.columns(4)
    
    with col1:
        st.markdown("""
        <div style="background-color: rgba(70, 70, 70, 0.3); padding: 10px; border-radius: 5px; color: white;">
        <h3>1Ô∏è‚É£ Carga de Datos</h3>
        <ul>
        <li>Cargar datos hist√≥ricos de ataques</li>
        <li>Cargar datos de CVE (opcional)</li>
        </ul>
        </div>
        """, unsafe_allow_html=True)
    
    with col2:
        st.markdown("""
        <div style="background-color: rgba(70, 70, 70, 0.3); padding: 10px; border-radius: 5px; color: white;">
        <h3>2Ô∏è‚É£ Preparaci√≥n de Datos</h3>
        <ul>
        <li>Detecci√≥n de outliers</li>
        <li>Transformaci√≥n de datos</li>
        <li>Feature engineering</li>
        </ul>
        </div>
        """, unsafe_allow_html=True)
    
    with col3:
        st.markdown("""
        <div style="background-color: rgba(70, 70, 70, 0.3); padding: 10px; border-radius: 5px; color: white;">
        <h3>3Ô∏è‚É£ Entrenamiento</h3>
        <ul>
        <li>Optimizaci√≥n de hiperpar√°metros</li>
        <li>Entrenamiento del modelo</li>
        <li>Validaci√≥n cruzada</li>
        </ul>
        </div>
        """, unsafe_allow_html=True)
    
    with col4:
        st.markdown("""
        <div style="background-color: rgba(70, 70, 70, 0.3); padding: 10px; border-radius: 5px; color: white;">
        <h3>4Ô∏è‚É£ Predicci√≥n</h3>
        <ul>
        <li>Generaci√≥n de predicciones</li>
        <li>Visualizaci√≥n de resultados</li>
        <li>Interpretaci√≥n</li>
        </ul>
        </div>
        """, unsafe_allow_html=True)
    
    st.markdown("""
    <div style="background-color: rgba(70, 70, 70, 0.3); padding: 10px; border-radius: 5px; color: white; margin-top: 20px;">
    <h3>Descripci√≥n detallada del flujo de trabajo:</h3>
    
    <p><strong>1. Carga de Datos:</strong></p>
    <ul>
        <li><strong>Selecci√≥n de enfoque:</strong> Elija entre "Conteo de ataques por d√≠a" o "D√≠as entre ataques"</li>
        <li><strong>Carga de datos hist√≥ricos:</strong> Utilice datos propios o los datos de ejemplo incluidos</li>
        <li><strong>Datos de vulnerabilidades (CVE):</strong> Opcionalmente, incluya datos de vulnerabilidades para mejorar las predicciones</li>
        <li><strong>Visualizaci√≥n inicial:</strong> Examine los datos cargados para entender sus caracter√≠sticas</li>
    </ul>
    
    <p><strong>2. Preparaci√≥n de Datos:</strong></p>
    <ul>
        <li><strong>Detecci√≥n de outliers:</strong> Identifique valores at√≠picos que podr√≠an afectar la precisi√≥n</li>
        <li><strong>Tratamiento de outliers:</strong> Elimine, reemplace o interpole valores at√≠picos</li>
        <li><strong>Transformaciones:</strong> Aplique transformaciones logar√≠tmicas u otras para estabilizar la varianza</li>
        <li><strong>Feature engineering:</strong> Genere caracter√≠sticas adicionales como d√≠as de la semana, festivos, etc.</li>
    </ul>
    
    <p><strong>3. Entrenamiento del Modelo:</strong></p>
    <ul>
        <li><strong>Configuraci√≥n de par√°metros:</strong> Ajuste los par√°metros del modelo seg√∫n sus necesidades</li>
        <li><strong>Optimizaci√≥n bayesiana:</strong> Encuentre autom√°ticamente los mejores hiperpar√°metros</li>
        <li><strong>Entrenamiento:</strong> Ajuste el modelo a los datos hist√≥ricos</li>
        <li><strong>Validaci√≥n cruzada:</strong> Eval√∫e el rendimiento del modelo en diferentes per√≠odos de tiempo</li>
    </ul>
    
    <p><strong>4. Generaci√≥n de Predicciones:</strong></p>
    <ul>
        <li><strong>Horizonte de predicci√≥n:</strong> Especifique cu√°ntos d√≠as hacia el futuro desea predecir</li>
        <li><strong>Calibraci√≥n de intervalos:</strong> Ajuste los intervalos de confianza para mayor precisi√≥n</li>
        <li><strong>Visualizaci√≥n:</strong> Examine gr√°ficamente las predicciones y sus componentes</li>
        <li><strong>Interpretaci√≥n:</strong> Analice los resultados y extraiga conclusiones accionables</li>
    </ul>
    
    <p>Es importante seguir este flujo en orden, ya que cada paso depende de los anteriores.
    El sistema guiar√° al usuario a trav√©s de cada etapa con indicadores visuales de progreso.</p>
    </div>
    """, unsafe_allow_html=True)
    
    # Cerrar la secci√≥n de flujo de trabajo
    st.markdown('</div>', unsafe_allow_html=True)
    
    # Carga de datos
    st.markdown(f'<div class="guide-section">', unsafe_allow_html=True)
    st.header("3Ô∏è‚É£ Carga de Datos", anchor="carga_datos")
    st.markdown("""
    ### Funci√≥n: `load_data_wrapper`
    
    Esta funci√≥n permite cargar los datos hist√≥ricos de ataques ransomware y, opcionalmente,
    datos de vulnerabilidades (CVE) para mejorar las predicciones.
    
    #### Par√°metros:
    
    - **ransomware_file**: Ruta al archivo JSON con datos de ataques ransomware.
      - Formato esperado: Archivo JSON con registros que contengan al menos una columna de fecha ('fecha', 'date' o 'ds').
      - Valor predeterminado: 'modeling/victimas_ransomware_mod.json'
    
    - **cve_file**: Ruta al archivo CSV con datos diarios de CVE.
      - Formato esperado: CSV con columnas 'fecha' y 'cve_count' (o similar).
      - Valor predeterminado: 'modeling/cve_diarias_regresor_prophet.csv'
    
    - **enfoque**: M√©todo para procesar los datos.
      - 'conteo_diario': Cuenta el n√∫mero de ataques por d√≠a.
      - 'dias_entre_ataques': Calcula el tiempo entre ataques consecutivos.
      - Valor predeterminado: 'conteo_diario'
    
    - **use_log_transform**: Si aplicar transformaci√≥n logar√≠tmica a los datos.
      - Recomendado: Activar para series con valores extremos o varianza no constante.
      - Valor predeterminado: False
    """)
    
    st.markdown('<div class="guide-code">', unsafe_allow_html=True)
    st.markdown("""
    ```python
    # Cargar datos con configuraci√≥n predeterminada
    df = load_data_wrapper()
    
    # Cargar datos con transformaci√≥n logar√≠tmica
    df = load_data_wrapper(use_log_transform=True)
    
    # Cargar datos desde archivos personalizados
    df = load_data_wrapper(
        ransomware_file='mis_datos/ataques.json',
        cve_file='mis_datos/vulnerabilidades.csv'
    )
    ```
    """)
    st.markdown('</div>', unsafe_allow_html=True)
    
    st.markdown('<div class="guide-tip">', unsafe_allow_html=True)
    st.markdown("""
    #### Consejos:
    
    - Aseg√∫rese de que los datos tengan una frecuencia regular (preferiblemente diaria).
    - La transformaci√≥n logar√≠tmica es recomendable cuando hay valores extremos o picos en los datos.
    - Incluir datos de CVE puede mejorar significativamente la precisi√≥n de las predicciones.
    """)
    st.markdown('</div>', unsafe_allow_html=True)
    st.markdown('</div>', unsafe_allow_html=True)
    
    # Preparaci√≥n de Datos
    st.markdown(f'<div class="guide-section">', unsafe_allow_html=True)
    st.header("4Ô∏è‚É£ Preparaci√≥n de Datos", anchor="preparacion_datos")
    st.markdown("""
    La preparaci√≥n adecuada de los datos es fundamental para obtener predicciones precisas. Esta secci√≥n explica
    las t√©cnicas disponibles para limpiar, transformar y enriquecer los datos antes del modelado.
    
    ### Detecci√≥n y tratamiento de outliers
    
    Los valores at√≠picos (outliers) pueden distorsionar significativamente las predicciones. El sistema ofrece
    varios m√©todos para detectar y manejar estos valores:
    
    #### M√©todos de detecci√≥n:
    
    - **M√©todo IQR (Rango Intercuartil)**:
      - Identifica valores que est√°n fuera de 1.5 √ó IQR desde el primer y tercer cuartil.
      - Efectivo para distribuciones aproximadamente normales.
    
    - **M√©todo Z-Score**:
      - Identifica valores que est√°n a m√°s de N desviaciones est√°ndar de la media.
      - Configurable mediante el par√°metro `threshold` (t√≠picamente 3.0).
    
    - **M√©todo de Desviaci√≥n Absoluta de la Mediana (MAD)**:
      - M√°s robusto que Z-Score para distribuciones no normales.
      - Menos afectado por los propios outliers durante la detecci√≥n.
    
    #### Opciones de tratamiento:
    
    - **Eliminaci√≥n**: Simplemente elimina los valores at√≠picos del conjunto de datos.
      - Ventaja: Simple y efectivo.
      - Desventaja: Puede crear huecos en los datos temporales.
    
    - **Imputaci√≥n**: Reemplaza los valores at√≠picos con valores estimados.
      - M√©todos disponibles: media, mediana, interpolaci√≥n lineal, interpolaci√≥n LOCF (√∫ltimo valor observado).
      - Recomendado para mantener la continuidad temporal.
    
    - **Winsorizaci√≥n**: Recorta los valores extremos a un percentil espec√≠fico.
      - Menos dr√°stico que la eliminaci√≥n completa.
      - Preserva la existencia del punto de datos pero reduce su impacto.
    
    ### Transformaciones de datos
    
    Las transformaciones pueden mejorar significativamente el rendimiento del modelo:
    
    - **Transformaci√≥n logar√≠tmica**:
      - Ideal para datos con crecimiento exponencial o alta variabilidad.
      - Estabiliza la varianza y normaliza distribuciones sesgadas.
      - Implementada mediante `np.log1p()` para manejar valores cero.
    
    - **Transformaci√≥n de ra√≠z cuadrada**:
      - Menos agresiva que la logar√≠tmica.
      - √ötil para datos moderadamente sesgados.
    
    - **Transformaci√≥n de Box-Cox**:
      - Familia flexible de transformaciones potenciales.
      - Encuentra autom√°ticamente el mejor par√°metro lambda.
      - Requiere valores estrictamente positivos.
    
    ### Feature Engineering
    
    La generaci√≥n de caracter√≠sticas adicionales puede mejorar significativamente las predicciones:
    
    - **Caracter√≠sticas temporales**:
      - D√≠a de la semana: Captura patrones semanales.
      - Mes del a√±o: Captura estacionalidad anual.
      - D√≠a del mes: Captura patrones mensuales.
      - Es fin de semana: Indicador binario para fines de semana.
    
    - **Eventos especiales**:
      - D√≠as festivos: Incorporados mediante la funcionalidad de holidays de Prophet.
      - Eventos de seguridad: Conferencias, divulgaci√≥n de vulnerabilidades importantes.
      - Per√≠odos especiales: Fin de a√±o fiscal, temporada de compras, etc.
    
    - **Variables externas**:
      - Conteo de CVE: N√∫mero de vulnerabilidades publicadas.
      - Indicadores econ√≥micos: Pueden correlacionarse con actividad de ransomware.
      - Menciones en medios: Cobertura medi√°tica de ransomware o ciberseguridad.
    
    ### Consejos para la preparaci√≥n de datos
    
    - **Inspecci√≥n visual**: Siempre visualice sus datos antes y despu√©s de la preparaci√≥n.
    - **Enfoque iterativo**: Pruebe diferentes m√©todos de tratamiento y compare resultados.
    - **Documentaci√≥n**: Mantenga registro de todas las transformaciones aplicadas para poder invertirlas despu√©s.
    - **Validaci√≥n**: Verifique que las transformaciones no introduzcan artefactos o distorsiones.
    - **Conocimiento del dominio**: Utilice su comprensi√≥n del ransomware para guiar decisiones de preparaci√≥n.
    
    ### Ejemplo pr√°ctico
    
    ```python
    # Detecci√≥n de outliers usando el m√©todo IQR
    Q1 = df['y'].quantile(0.25)
    Q3 = df['y'].quantile(0.75)
    IQR = Q3 - Q1
    lower_bound = Q1 - 1.5 * IQR
    upper_bound = Q3 + 1.5 * IQR
    
    # Identificar outliers
    outliers = df[(df['y'] < lower_bound) | (df['y'] > upper_bound)]
    
    # Visualizar outliers
    plt.figure(figsize=(10, 6))
    plt.scatter(df['ds'], df['y'], alpha=0.5)
    plt.scatter(outliers['ds'], outliers['y'], color='red')
    plt.title('Detecci√≥n de Outliers - M√©todo IQR')
    plt.show()
    
    # Imputar outliers con la mediana
    df_cleaned = df.copy()
    df_cleaned.loc[(df_cleaned['y'] < lower_bound) | (df_cleaned['y'] > upper_bound), 'y'] = df['y'].median()
    
    # Aplicar transformaci√≥n logar√≠tmica
    df_cleaned['y_log'] = np.log1p(df_cleaned['y'])
    
    # A√±adir caracter√≠sticas temporales
    df_cleaned['day_of_week'] = df_cleaned['ds'].dt.dayofweek
    df_cleaned['month'] = df_cleaned['ds'].dt.month
    df_cleaned['is_weekend'] = df_cleaned['day_of_week'].isin([5, 6]).astype(int)
    ```
    """)
    st.markdown('</div>', unsafe_allow_html=True)
    
    # Entrenamiento del Modelo
    st.markdown(f'<div class="guide-section">', unsafe_allow_html=True)
    st.header("5Ô∏è‚É£ Entrenamiento del Modelo", anchor="entrenamiento")
    st.markdown("""
    El entrenamiento del modelo es una fase cr√≠tica que determina la calidad de las predicciones futuras.
    Esta secci√≥n explica c√≥mo configurar y entrenar efectivamente el modelo Prophet para predicciones de ransomware.
    
    ### Funci√≥n: `train_model_wrapper`
    
    Esta funci√≥n configura y entrena un modelo Prophet con los par√°metros especificados.
    
    #### Par√°metros principales:
    
    - **df**: DataFrame con los datos de entrenamiento.
      - Debe contener al menos las columnas 'ds' (fechas) y 'y' (valores).
    
    - **yearly_seasonality**: Configuraci√≥n de estacionalidad anual.
      - True: Detecta autom√°ticamente estacionalidad anual.
      - False: No incluye estacionalidad anual.
      - N√∫mero entero: Especifica el n√∫mero de t√©rminos de Fourier (complejidad).
      - Valor predeterminado: True
    
    - **weekly_seasonality**: Configuraci√≥n de estacionalidad semanal.
      - Similar a yearly_seasonality pero para patrones semanales.
      - Valor predeterminado: True
    
    - **daily_seasonality**: Configuraci√≥n de estacionalidad diaria.
      - √ötil solo para datos con m√∫ltiples puntos por d√≠a.
      - Valor predeterminado: False
    
    - **seasonality_mode**: Modo de estacionalidad.
      - 'additive': Efectos estacionales constantes independientes del nivel.
      - 'multiplicative': Efectos estacionales que escalan con el nivel.
      - Valor predeterminado: 'additive'
    
    - **changepoint_prior_scale**: Flexibilidad de la tendencia.
      - Valores m√°s altos permiten cambios m√°s abruptos en la tendencia.
      - Valor predeterminado: 0.05
    
    - **seasonality_prior_scale**: Fuerza de los componentes estacionales.
      - Valores m√°s altos permiten patrones estacionales m√°s pronunciados.
      - Valor predeterminado: 10.0
    
    - **holidays_prior_scale**: Impacto de eventos especiales.
      - Valores m√°s altos dan m√°s peso a los efectos de d√≠as festivos.
      - Valor predeterminado: 10.0
    
    - **changepoint_range**: Proporci√≥n de datos donde pueden ocurrir puntos de cambio.
      - 0.8 significa que los puntos de cambio solo pueden ocurrir en el primer 80% de los datos.
      - Valor predeterminado: 0.8
    
    - **interval_width**: Ancho de los intervalos de predicci√≥n.
      - 0.95 corresponde a un intervalo de confianza del 95%.
      - Valor predeterminado: 0.8
    
    - **country_holidays**: Pa√≠s para incluir d√≠as festivos autom√°ticamente.
      - Ejemplo: 'ES' para Espa√±a, 'US' para Estados Unidos.
      - Valor predeterminado: None
    
    - **custom_holidays**: DataFrame con eventos personalizados.
      - Debe tener columnas 'holiday', 'ds', 'lower_window', 'upper_window'.
      - Valor predeterminado: None
    
    - **regressors**: Lista de nombres de columnas para usar como regresores.
      - Ejemplo: ['cve_count'] para incluir conteo de CVEs como variable externa.
      - Valor predeterminado: None
    """)
    st.markdown('<div class="guide-code">', unsafe_allow_html=True)
    st.markdown("""
    ```python
    # Entrenamiento b√°sico con par√°metros predeterminados
    model = train_model_wrapper(df)
    
    # Entrenamiento personalizado
    model = train_model_wrapper(
        df,
        yearly_seasonality=20,
        weekly_seasonality=True,
        seasonality_mode='multiplicative',
        changepoint_prior_scale=0.1,
        seasonality_prior_scale=15.0,
        holidays_prior_scale=10.0,
        interval_width=0.9,
        country_holidays='US'
    )
    
    # Entrenamiento con regresores externos
    model = train_model_wrapper(
        df,
        regressors=['cve_count', 'media_mentions'],
        changepoint_prior_scale=0.05
    )
    ```
    """)
    st.markdown('</div>', unsafe_allow_html=True)
    
    st.markdown('<div class="guide-tip">', unsafe_allow_html=True)
    st.markdown("""
    #### Consejos para el entrenamiento efectivo:
    
    1. **Estacionalidad**:
       - Active yearly_seasonality si tiene al menos 2 a√±os de datos.
       - Active weekly_seasonality si espera patrones diferentes por d√≠a de la semana.
       - Ajuste la complejidad (n√∫mero de t√©rminos) seg√∫n la complejidad observada en los datos.
    
    2. **Modo de estacionalidad**:
       - Use 'additive' (predeterminado) si la amplitud de los patrones estacionales es constante.
       - Use 'multiplicative' si la amplitud de los patrones estacionales aumenta con el nivel general.
    
    3. **Flexibilidad de la tendencia**:
       - Aumente changepoint_prior_scale si la tendencia parece demasiado r√≠gida.
       - Disminuya changepoint_prior_scale si la tendencia es demasiado flexible y sobreajusta.
    
    4. **D√≠as festivos**:
       - Incluya country_holidays para capturar autom√°ticamente efectos de d√≠as festivos nacionales.
       - A√±ada custom_holidays para eventos espec√≠ficos relevantes para ransomware.
    
    5. **Regresores externos**:
       - Incluya variables que puedan tener relaci√≥n causal con ataques de ransomware.
       - Aseg√∫rese de que los regresores est√©n disponibles para todo el per√≠odo de predicci√≥n.
    
    6. **Intervalos de predicci√≥n**:
       - Ajuste interval_width seg√∫n su tolerancia al riesgo (0.8 = 80% de confianza).
       - Valores m√°s altos producen intervalos m√°s amplios pero con mayor cobertura.
    """)
    st.markdown('</div>', unsafe_allow_html=True)
    st.markdown('</div>', unsafe_allow_html=True)
    
    # Generaci√≥n de Predicciones
    st.markdown(f'<div class="guide-section">', unsafe_allow_html=True)
    st.header("6Ô∏è‚É£ Generaci√≥n de Predicciones", anchor="prediccion")
    st.markdown("""
    Una vez entrenado el modelo, el siguiente paso es generar predicciones para per√≠odos futuros.
    Esta secci√≥n explica c√≥mo configurar y ejecutar el proceso de predicci√≥n.
    
    ### Funci√≥n: `generate_forecast_wrapper`
    
    Esta funci√≥n genera predicciones utilizando un modelo Prophet previamente entrenado.
    
    #### Par√°metros principales:
    
    - **model**: Modelo Prophet entrenado.
      - Debe ser un modelo previamente entrenado con `train_model_wrapper`.
    
    - **periods**: N√∫mero de per√≠odos futuros a predecir.
      - Para datos diarios, esto equivale al n√∫mero de d√≠as.
      - Valor predeterminado: 30
    
    - **freq**: Frecuencia de las predicciones.
      - 'D' para diario, 'W' para semanal, 'M' para mensual, etc.
      - Valor predeterminado: 'D'
    
    - **include_history**: Si incluir datos hist√≥ricos en las predicciones.
      - √ötil para visualizar la continuidad entre datos hist√≥ricos y predicciones.
      - Valor predeterminado: True
    
    - **future_regressors**: Diccionario con valores futuros para regresores externos.
      - Clave: nombre del regresor, Valor: lista o array con valores futuros.
      - Ejemplo: {'cve_count': [10, 12, 8, ...]}
      - Valor predeterminado: None
    """)
    
    st.markdown('<div class="guide-code">', unsafe_allow_html=True)
    st.markdown("""
    ```python
    # Predicci√≥n b√°sica para los pr√≥ximos 30 d√≠as
    forecast = generate_forecast_wrapper(model, periods=30)
    
    # Predicci√≥n semanal para los pr√≥ximos 3 meses
    forecast = generate_forecast_wrapper(model, periods=12, freq='W')
    
    # Predicci√≥n con regresores externos futuros
    future_cve_counts = [10, 12, 15, 8, 9, 11, 14] * 4  # Valores para 28 d√≠as
    forecast = generate_forecast_wrapper(
        model,
        periods=28,
        future_regressors={'cve_count': future_cve_counts}
    )
    ```
    """)
    st.markdown('</div>', unsafe_allow_html=True)
    
    st.markdown('<div class="guide-tip">', unsafe_allow_html=True)
    st.markdown("""
    #### Componentes de las predicciones:
    
    El DataFrame de predicciones (`forecast`) contiene varias columnas importantes:
    
    1. **ds**: Fechas para las que se generan predicciones.
    2. **yhat**: Valor predicho (la mejor estimaci√≥n puntual).
    3. **yhat_lower**: L√≠mite inferior del intervalo de predicci√≥n.
    4. **yhat_upper**: L√≠mite superior del intervalo de predicci√≥n.
    5. **trend**: Componente de tendencia de la predicci√≥n.
    6. Componentes estacionales: weekly, yearly, etc. (si est√°n activados).
    7. Componentes de d√≠as festivos (si est√°n incluidos).
    8. Componentes de regresores (si se utilizaron).
    
    #### Consejos para predicciones efectivas:
    
    1. **Horizonte de predicci√≥n**:
       - Sea conservador con el horizonte de predicci√≥n (periods).
       - La precisi√≥n disminuye naturalmente a medida que se predice m√°s lejos en el futuro.
       - Para ransomware, horizontes de 30-60 d√≠as suelen ser razonables.
    
    2. **Regresores externos**:
       - Si utiliz√≥ regresores durante el entrenamiento, debe proporcionar valores futuros.
       - Para variables como CVEs, considere usar promedios hist√≥ricos o tendencias si no tiene proyecciones.
    
    3. **Interpretaci√≥n de intervalos**:
       - Recuerde que yhat_lower y yhat_upper definen el rango de valores probables.
       - Para planificaci√≥n de contingencia, considere el escenario de yhat_upper (peor caso).
    
    4. **Validaci√≥n de predicciones**:
       - Compare las primeras predicciones con valores reales a medida que est√©n disponibles.
       - Reentrenar el modelo si se observan desviaciones significativas.
    
    5. **Actualizaci√≥n regular**:
       - Para mayor precisi√≥n, actualice las predicciones regularmente con nuevos datos.
       - Considere un proceso automatizado de predicci√≥n diaria o semanal.
    """)
    st.markdown('</div>', unsafe_allow_html=True)
    st.markdown('</div>', unsafe_allow_html=True)
    
    # Evaluaci√≥n del Modelo
    st.markdown(f'<div class="guide-section">', unsafe_allow_html=True)
    st.header("7Ô∏è‚É£ Evaluaci√≥n del Modelo", anchor="evaluacion")
    st.markdown("""
    La evaluaci√≥n del modelo es un paso cr√≠tico para determinar la precisi√≥n y fiabilidad de las predicciones.
    Nuestro sistema ofrece herramientas robustas para evaluar el rendimiento del modelo de predicci√≥n de ransomware.
    
    ### Funci√≥n: `evaluate_model_wrapper`
    
    Esta funci√≥n eval√∫a el rendimiento del modelo utilizando validaci√≥n cruzada temporal y calcula m√©tricas de error.
    
    #### Par√°metros:
    
    - **model**: Modelo Prophet entrenado.
      - Debe ser un modelo previamente entrenado con `train_model_wrapper`.
    
    - **df**: DataFrame con los datos originales.
      - Debe contener al menos las columnas 'ds' (fechas) y 'y' (valores).
    
    - **initial**: Proporci√≥n inicial de datos para entrenamiento (0-1).
      - Por ejemplo, 0.5 significa usar el primer 50% de los datos para entrenamiento inicial.
      - Valor predeterminado: 0.5
    
    - **period**: N√∫mero de puntos de datos entre cada evaluaci√≥n.
      - Define el paso entre cada iteraci√≥n de validaci√≥n.
      - Valor predeterminado: 30
    
    - **horizon**: N√∫mero de puntos de datos a predecir en cada iteraci√≥n.
      - Define cu√°ntos puntos futuros se predicen en cada paso de validaci√≥n.
      - Valor predeterminado: 30
    
    - **parallel**: Si ejecutar la validaci√≥n cruzada en paralelo.
      - Puede acelerar significativamente el proceso en sistemas multicore.
      - Valor predeterminado: False
    """)
    
    st.markdown('<div class="guide-code">', unsafe_allow_html=True)
    st.markdown("""
    ```python
    # Evaluaci√≥n b√°sica con par√°metros predeterminados
    cv_results = evaluate_model_wrapper(model, df)
    
    # Evaluaci√≥n personalizada
    cv_results = evaluate_model_wrapper(
        model,
        df,
        initial=0.6,  # Usar el primer 60% para entrenamiento inicial
        period=14,    # Evaluar cada 14 d√≠as
        horizon=30    # Predecir 30 d√≠as en cada iteraci√≥n
    )
    ```
    """)
    st.markdown('</div>', unsafe_allow_html=True)
    
    st.markdown('<div class="guide-tip">', unsafe_allow_html=True)
    st.markdown("""
    #### C√≥mo funciona la validaci√≥n cruzada temporal:
    
    A diferencia de la validaci√≥n cruzada tradicional, la validaci√≥n cruzada temporal respeta el orden cronol√≥gico de los datos:
    
    1. **Proceso secuencial**:
       - Se entrena con datos hasta un punto de corte inicial (definido por `initial`)
       - Se predice el horizonte futuro (definido por `horizon`)
       - Se comparan las predicciones con los valores reales
       - Se avanza el punto de corte (seg√∫n `period`) y se repite
    
    2. **Ventajas**:
       - Simula escenarios de predicci√≥n reales
       - Evita "mirar hacia el futuro" durante el entrenamiento
       - Proporciona una evaluaci√≥n m√°s realista del rendimiento
    
    #### M√©tricas de evaluaci√≥n:
    
    El sistema calcula varias m√©tricas para evaluar diferentes aspectos del rendimiento del modelo:
    
    1. **SMAPE (Symmetric Mean Absolute Percentage Error)**:
       - Mide el error porcentual absoluto de forma sim√©trica
       - F√≥rmula: 2 * |actual - predicci√≥n| / (|actual| + |predicci√≥n|) * 100
       - Ventaja: Funciona bien incluso con valores cercanos a cero
       - Interpretaci√≥n: Valores m√°s bajos indican mejor rendimiento (0% es perfecto)
       - Rango: 0% a 200%
    
    2. **MAE (Mean Absolute Error)**:
       - Mide el error absoluto promedio
       - F√≥rmula: promedio(|actual - predicci√≥n|)
       - Ventaja: F√°cil de interpretar, en las mismas unidades que los datos
       - Interpretaci√≥n: Cu√°nto se desv√≠a en promedio la predicci√≥n del valor real
    
    3. **RMSE (Root Mean Square Error)**:
       - Mide el error cuadr√°tico medio
       - F√≥rmula: ra√≠z(promedio((actual - predicci√≥n)¬≤))
       - Ventaja: Penaliza errores grandes m√°s que errores peque√±os
       - Interpretaci√≥n: Similar a MAE pero con mayor peso a errores grandes
    
    4. **MSE (Mean Square Error)**:
       - Mide el error cuadr√°tico medio sin la ra√≠z cuadrada
       - F√≥rmula: promedio((actual - predicci√≥n)¬≤)
       - Ventaja: √ötil para comparaciones matem√°ticas
       - Interpretaci√≥n: Valores m√°s bajos indican mejor rendimiento
    
    5. **Coverage (Cobertura de intervalos)**:
       - Porcentaje de valores reales que caen dentro del intervalo de predicci√≥n
       - F√≥rmula: (valores dentro del intervalo) / (total de valores) * 100
       - Interpretaci√≥n: Deber√≠a ser cercano al nivel de confianza especificado (ej. 80% o 95%)
       - Valores muy bajos indican intervalos demasiado estrechos
       - Valores muy altos indican intervalos demasiado amplios
    
    #### Interpretaci√≥n de los resultados de evaluaci√≥n:
    
    1. **An√°lisis de m√©tricas**:
       - **SMAPE < 10%**: Excelente precisi√≥n
       - **SMAPE 10-20%**: Buena precisi√≥n
       - **SMAPE 20-50%**: Precisi√≥n moderada
       - **SMAPE > 50%**: Baja precisi√≥n, considere ajustar el modelo
    
    2. **An√°lisis de horizonte**:
       - Examine c√≥mo cambian las m√©tricas a medida que aumenta el horizonte
       - Es normal que el error aumente con horizontes m√°s largos
       - Si el error aumenta dr√°sticamente, considere limitar el horizonte de predicci√≥n
    
    3. **An√°lisis de cobertura**:
       - Idealmente, la cobertura deber√≠a ser cercana al nivel de confianza del intervalo
       - Cobertura significativamente menor: intervalos demasiado estrechos
       - Cobertura significativamente mayor: intervalos demasiado amplios
    
    #### Backtesting (Prueba retrospectiva):
    
    Nuestro sistema tambi√©n ofrece capacidades de backtesting para simular c√≥mo habr√≠a funcionado el modelo en el pasado:
    
    1. **Selecci√≥n de fecha de corte**:
       - Elija una fecha hist√≥rica como punto de corte
       - El modelo se entrena con datos hasta esa fecha
       - Se generan predicciones a partir de esa fecha
    
    2. **Comparaci√≥n visual**:
       - Los valores reales se muestran junto con las predicciones
       - Permite evaluar visualmente la precisi√≥n del modelo
    
    3. **M√©tricas espec√≠ficas**:
       - Se calculan m√©tricas de error solo para el per√≠odo de prueba
       - Proporciona una evaluaci√≥n realista del rendimiento esperado
    
    #### Consejos para la evaluaci√≥n del modelo:
    
    - **Balance entre ajuste y generalizaci√≥n**:
      - Un modelo con errores muy bajos en datos de entrenamiento pero altos en validaci√≥n est√° sobreajustado
      - Busque un balance que generalice bien a datos nuevos
    
    - **Ajuste basado en m√©tricas**:
      - Si SMAPE es alto, considere ajustar par√°metros como `changepoint_prior_scale`
      - Si la cobertura es baja, aumente `interval_width`
    
    - **Evaluaci√≥n contextual**:
      - Compare el rendimiento con la variabilidad inherente de los datos
      - Para series muy vol√°tiles, incluso un SMAPE del 30% puede ser aceptable
    
    - **M√∫ltiples horizontes**:
      - Eval√∫e el modelo con diferentes horizontes de predicci√≥n
      - Determine hasta qu√© punto futuro las predicciones son confiables
    
    - **Validaci√≥n externa**:
      - Cuando sea posible, valide con datos completamente nuevos
      - Especialmente importante para decisiones cr√≠ticas de seguridad
    """)
    st.markdown('</div>', unsafe_allow_html=True)
    st.markdown('</div>', unsafe_allow_html=True)

    # Visualizaci√≥n de Resultados
    st.markdown(f'<div class="guide-section">', unsafe_allow_html=True)
    st.header("8Ô∏è‚É£ Visualizaci√≥n de Resultados", anchor="visualizacion")
    st.markdown("""
    La visualizaci√≥n de resultados es fundamental para comprender e interpretar las predicciones generadas por el modelo.
    Prophet ofrece potentes herramientas de visualizaci√≥n que permiten examinar tanto las predicciones como los componentes
    subyacentes del modelo.
    
    ### Funci√≥n: `visualize_forecast_wrapper`
    
    Esta funci√≥n genera visualizaciones interactivas de las predicciones y los componentes del modelo.
    
    #### Par√°metros:
    
    - **forecast**: DataFrame con las predicciones generadas por `generate_forecast_wrapper`.
      - Debe contener al menos las columnas 'ds', 'yhat', 'yhat_lower', 'yhat_upper'.
    
    - **df_original**: DataFrame con los datos originales.
      - Utilizado para mostrar los valores hist√≥ricos junto con las predicciones.
    
    - **components**: Si visualizar los componentes del modelo (tendencia, estacionalidad).
      - Permite descomponer la predicci√≥n en sus componentes b√°sicos.
      - Valor predeterminado: True
    
    - **plot_cap**: Si mostrar la capacidad m√°xima en el gr√°fico (si se defini√≥).
      - Relevante solo si se utiliz√≥ un l√≠mite superior en el modelo.
      - Valor predeterminado: False
    
    - **changepoints**: Si mostrar los puntos de cambio detectados.
      - Muestra d√≥nde el modelo identific√≥ cambios significativos en la tendencia.
      - Valor predeterminado: True
    """)
    
    st.markdown('<div class="guide-code">', unsafe_allow_html=True)
    st.markdown("""
    ```python
    # Visualizar predicciones con configuraci√≥n predeterminada
    fig = visualize_forecast_wrapper(forecast, df_original)
    
    # Visualizar sin componentes
    fig = visualize_forecast_wrapper(forecast, df_original, components=False)
    
    # Visualizar con puntos de cambio destacados
    fig = visualize_forecast_wrapper(
        forecast,
        df_original,
        changepoints=True
    )
    ```
    """)
    st.markdown('</div>', unsafe_allow_html=True)
    
    st.markdown('<div class="guide-tip">', unsafe_allow_html=True)
    st.markdown("""
    #### C√≥mo funciona la visualizaci√≥n en Prophet:
    
    Prophet utiliza un enfoque de descomposici√≥n para modelar series temporales, lo que facilita visualizar cada componente por separado:
    
    1. **Descomposici√≥n aditiva o multiplicativa**:
       - Aditiva: y(t) = tendencia(t) + estacionalidad(t) + vacaciones(t) + error(t)
       - Multiplicativa: y(t) = tendencia(t) √ó estacionalidad(t) √ó vacaciones(t) √ó error(t)
    
    2. **Componentes visualizados**:
       - **Tendencia**: Representa la direcci√≥n general a largo plazo
       - **Estacionalidad**: Patrones c√≠clicos predecibles (diarios, semanales, anuales)
       - **Efectos de d√≠as festivos**: Impacto de eventos especiales
       - **Regresores externos**: Influencia de variables adicionales (como datos de CVE)
    
    #### Elementos clave en las visualizaciones:
    
    - **Gr√°fico principal de predicci√≥n**:
      - **Puntos negros**: Datos hist√≥ricos reales
      - **L√≠nea azul**: Predicci√≥n (yhat)
      - **√Årea sombreada azul**: Intervalo de confianza (yhat_lower a yhat_upper)
      - **L√≠neas verticales rojas** (opcional): Puntos de cambio detectados
    
    - **Gr√°ficos de componentes**:
      - **Tendencia**: Muestra la direcci√≥n general sin componentes estacionales
      - **Estacionalidad anual**: Patrones que se repiten cada a√±o
      - **Estacionalidad semanal**: Patrones que se repiten cada semana
      - **Estacionalidad diaria**: Patrones que se repiten cada d√≠a
    
    #### Visualizaciones interactivas en la interfaz:
    
    Nuestro sistema mejora las visualizaciones b√°sicas de Prophet con caracter√≠sticas interactivas:
    
    1. **Zoom y desplazamiento**: Puede acercar √°reas espec√≠ficas de inter√©s
    2. **Informaci√≥n al pasar el cursor**: Muestra valores exactos al pasar el cursor sobre el gr√°fico
    3. **Leyenda interactiva**: Permite mostrar/ocultar componentes espec√≠ficos
    4. **Exportaci√≥n**: Puede descargar gr√°ficos como im√°genes PNG
    5. **Personalizaci√≥n**: Ajuste de colores y estilos para mejor visibilidad
    
    #### Pasos para visualizar resultados en la interfaz:
    
    1. **Genere predicciones primero**:
       - Aseg√∫rese de haber completado los pasos de carga de datos, entrenamiento y predicci√≥n
    
    2. **Explore las visualizaciones generadas autom√°ticamente**:
       - Gr√°fico principal de predicci√≥n con datos hist√≥ricos y proyecciones futuras
       - Gr√°ficos de componentes que muestran tendencia y patrones estacionales
    
    3. **Interact√∫e con los gr√°ficos**:
       - Use las herramientas de zoom para examinar per√≠odos espec√≠ficos
       - Pase el cursor sobre los puntos para ver valores exactos
       - Utilice la leyenda para mostrar/ocultar componentes
    
    4. **Analice los componentes por separado**:
       - Examine la tendencia para entender la direcci√≥n general
       - Observe patrones estacionales para identificar ciclos recurrentes
       - Identifique puntos de cambio donde ocurrieron cambios significativos
    
    #### Consejos para la visualizaci√≥n:
    
    - **Intervalos de confianza**: Preste atenci√≥n a la amplitud de los intervalos; m√°s amplios indican mayor incertidumbre
    - **Puntos de cambio**: Investigue qu√© eventos podr√≠an haber causado cambios significativos en la tendencia
    - **Patrones estacionales**: Identifique d√≠as de la semana, meses o per√≠odos con mayor actividad de ransomware
    - **Anomal√≠as**: Busque puntos hist√≥ricos que se desv√≠en significativamente de la predicci√≥n
    - **Exportaci√≥n**: Guarde visualizaciones importantes para incluirlas en informes o presentaciones
    
    #### Interpretaci√≥n avanzada de visualizaciones:
    
    - **Tendencia creciente/decreciente**: Indica aumento/disminuci√≥n general en la actividad de ransomware
    - **Estacionalidad fuerte**: Sugiere patrones predecibles que pueden ayudar en la planificaci√≥n
    - **Puntos de cambio frecuentes**: Indican una serie temporal vol√°til con cambios frecuentes en comportamiento
    - **Intervalos amplios**: Sugieren alta incertidumbre, posiblemente debido a datos limitados o alta variabilidad
    """)
    st.markdown('</div>', unsafe_allow_html=True)
    st.markdown('</div>', unsafe_allow_html=True)

    # Interpretaci√≥n de Resultados
    st.markdown(f'<div class="guide-section">', unsafe_allow_html=True)
    st.header("9Ô∏è‚É£ Interpretaci√≥n de Resultados", anchor="interpretacion")
    st.markdown("""
    La interpretaci√≥n correcta de los resultados es crucial para tomar decisiones informadas basadas en las predicciones
    del modelo. Esta secci√≥n proporciona una gu√≠a detallada sobre c√≥mo interpretar las predicciones de ransomware y
    sus componentes.
    
    ### Componentes principales de las predicciones
    
    Las predicciones generadas por Prophet contienen varios elementos clave que deben interpretarse correctamente:
    
    #### 1. Predicci√≥n principal (yhat)
    
    - **Definici√≥n**: Es el valor esperado de la predicci√≥n en cada punto temporal.
    - **Interpretaci√≥n**: Representa el n√∫mero estimado de ataques de ransomware para cada fecha futura.
    - **Uso pr√°ctico**: Utilice estos valores para planificar recursos y estrategias de mitigaci√≥n.
    
    #### 2. Intervalos de confianza (yhat_lower, yhat_upper)
    
    - **Definici√≥n**: Definen el rango dentro del cual se espera que caiga el valor real con cierta probabilidad.
    - **Interpretaci√≥n**: 
      - **yhat_lower**: L√≠mite inferior del intervalo de confianza (escenario optimista).
      - **yhat_upper**: L√≠mite superior del intervalo de confianza (escenario pesimista).
    - **Uso pr√°ctico**: 
      - Planificaci√≥n de contingencia basada en el peor escenario (yhat_upper).
      - Evaluaci√≥n de la incertidumbre de la predicci√≥n (amplitud del intervalo).
    
    #### 3. Componentes de la predicci√≥n
    
    - **Tendencia**: 
      - Direcci√≥n general a largo plazo de los ataques de ransomware.
      - Un aumento indica crecimiento en la actividad criminal, una disminuci√≥n sugiere reducci√≥n.
    
    - **Estacionalidad**: 
      - Patrones c√≠clicos predecibles en diferentes escalas temporales.
      - Identifica per√≠odos de mayor o menor riesgo (d√≠as de la semana, meses, etc.).
    
    - **D√≠as festivos/Eventos especiales**: 
      - Impacto de eventos espec√≠ficos en la actividad de ransomware.
      - √ötil para identificar per√≠odos de vulnerabilidad especial.
    
    ### Gu√≠a para la interpretaci√≥n pr√°ctica
    
    #### An√°lisis de tendencias
    
    1. **Tendencia creciente**:
       - **Interpretaci√≥n**: Aumento sostenido en la actividad de ransomware.
       - **Acci√≥n recomendada**: Incrementar recursos de seguridad, actualizar defensas y concientizar al personal.
    
    2. **Tendencia decreciente**:
       - **Interpretaci√≥n**: Disminuci√≥n en la actividad de ransomware.
       - **Acci√≥n recomendada**: Mantener vigilancia, pero posible oportunidad para reasignar algunos recursos.
    
    3. **Tendencia estable**:
       - **Interpretaci√≥n**: Nivel constante de actividad de ransomware.
       - **Acci√≥n recomendada**: Mantener estrategias actuales de defensa y monitoreo.
    
    4. **Cambios abruptos en la tendencia**:
       - **Interpretaci√≥n**: Posible cambio en t√°cticas de atacantes o nueva vulnerabilidad.
       - **Acci√≥n recomendada**: Investigar causas subyacentes y ajustar defensas seg√∫n sea necesario.
    
    #### An√°lisis de estacionalidad
    
    1. **Patrones semanales**:
       - **Ejemplo**: Mayor actividad en d√≠as laborables vs. fines de semana.
       - **Acci√≥n recomendada**: Ajustar niveles de personal de seguridad seg√∫n el d√≠a de la semana.
    
    2. **Patrones mensuales/trimestrales**:
       - **Ejemplo**: Aumento de actividad al final del trimestre fiscal.
       - **Acci√≥n recomendada**: Incrementar vigilancia durante per√≠odos de alto riesgo identificados.
    
    3. **Patrones anuales**:
       - **Ejemplo**: Mayor actividad durante temporadas de vacaciones.
       - **Acci√≥n recomendada**: Planificar recursos adicionales para per√≠odos anuales de alto riesgo.
    
    #### An√°lisis de incertidumbre
    
    1. **Intervalos estrechos**:
       - **Interpretaci√≥n**: Alta confianza en la predicci√≥n.
       - **Acci√≥n recomendada**: Planificaci√≥n m√°s precisa basada en valores previstos.
    
    2. **Intervalos amplios**:
       - **Interpretaci√≥n**: Alta incertidumbre en la predicci√≥n.
       - **Acci√≥n recomendada**: Preparar m√∫ltiples escenarios y mantener flexibilidad en la respuesta.
    
    3. **Ampliaci√≥n de intervalos con el tiempo**:
       - **Interpretaci√≥n**: Aumento de incertidumbre a medida que se predice m√°s lejos en el futuro.
       - **Acci√≥n recomendada**: Mayor cautela con predicciones a largo plazo, actualizar frecuentemente.
    
    ### Interpretaci√≥n avanzada
    
    #### Correlaci√≥n con factores externos
    
    1. **Regresores adicionales**:
       - Si se incluyeron variables externas (como datos de CVE), analice su impacto.
       - Identifique qu√© factores tienen mayor influencia en las predicciones.
    
    2. **Eventos no modelados**:
       - Considere factores que el modelo no incorpora (nuevas tecnolog√≠as, cambios regulatorios).
       - Ajuste interpretaciones seg√∫n conocimiento experto no capturado por el modelo.
    
    #### An√°lisis de anomal√≠as
    
    1. **Valores at√≠picos hist√≥ricos**:
       - Identifique puntos donde los datos reales se desviaron significativamente de las predicciones.
       - Investigue causas subyacentes para mejorar predicciones futuras.
    
    2. **Predicciones extremas**:
       - Eval√∫e cr√≠ticamente predicciones inusualmente altas o bajas.
       - Considere factores contextuales que podr√≠an explicar o contradecir estos valores.
    
    ### Comunicaci√≥n de resultados
    
    1. **Audiencia t√©cnica**:
       - Proporcione m√©tricas detalladas, componentes descompuestos y an√°lisis estad√≠stico.
       - Discuta limitaciones del modelo y fuentes de incertidumbre.
    
    2. **Audiencia no t√©cnica**:
       - Enf√≥quese en tendencias generales y patrones claros.
       - Traduzca predicciones a recomendaciones accionables.
       - Utilice visualizaciones intuitivas con explicaciones claras.
    
    3. **Toma de decisiones**:
       - Presente m√∫ltiples escenarios (mejor caso, caso esperado, peor caso).
       - Vincule predicciones con acciones concretas de mitigaci√≥n.
       - Enfatice el nivel de confianza en diferentes aspectos de la predicci√≥n.
    
    ### Limitaciones y consideraciones
    
    1. **Cambios estructurales**:
       - El modelo asume que los patrones pasados continuar√°n en el futuro.
       - Est√© atento a cambios fundamentales en el panorama de amenazas.
    
    2. **Eventos sin precedentes**:
       - Las predicciones pueden ser menos confiables durante eventos disruptivos (como pandemias).
       - Complemente el modelo con an√°lisis cualitativo en situaciones sin precedentes.
    
    3. **Horizonte de predicci√≥n**:
       - La confiabilidad disminuye a medida que se predice m√°s lejos en el futuro.
       - Considere horizontes m√°s cortos para decisiones cr√≠ticas.
    
    4. **Causalidad vs. correlaci√≥n**:
       - El modelo identifica patrones, no necesariamente relaciones causales.
       - Use conocimiento del dominio para interpretar relaciones identificadas.
    
    ### Ejemplo pr√°ctico de interpretaci√≥n
    
    Supongamos que tenemos las siguientes predicciones para la pr√≥xima semana:
    
    | Fecha       | yhat | yhat_lower | yhat_upper |
    |-------------|------|------------|------------|
    | 2023-06-01  | 25   | 18         | 32         |
    | 2023-06-02  | 30   | 22         | 38         |
    | 2023-06-03  | 15   | 8          | 22         |
    | 2023-06-04  | 12   | 5          | 19         |
    | 2023-06-05  | 28   | 20         | 36         |
    
    **Interpretaci√≥n**:
    
    1. **Patr√≥n semanal**: Se observa menor actividad en fin de semana (03-04) comparado con d√≠as laborables.
    2. **Nivel de alerta**: Planificar mayor vigilancia el viernes (02) cuando se espera el pico de actividad.
    3. **Planificaci√≥n de recursos**: 
       - Escenario esperado: Prepararse para hasta 30 incidentes el viernes.
       - Peor escenario: Tener capacidad para manejar hasta 38 incidentes.
    4. **Incertidumbre**: El rango entre yhat_lower y yhat_upper es de aproximadamente ¬±8 incidentes, lo que indica un nivel moderado de incertidumbre.
    
    **Acciones recomendadas**:
    
    1. Asignar personal adicional para los d√≠as con predicciones m√°s altas (viernes y lunes).
    2. Implementar monitoreo intensificado durante estos d√≠as de alto riesgo.
    3. Programar actualizaciones de seguridad cr√≠ticas para el domingo, cuando se espera menor actividad.
    4. Preparar un plan de contingencia para manejar hasta 38 incidentes el viernes (peor escenario).
    """)
    st.markdown('</div>', unsafe_allow_html=True)

    # Optimizaciones Avanzadas
    st.markdown(f'<div class="guide-section">', unsafe_allow_html=True)
    st.header("üîß Optimizaciones Avanzadas", anchor="optimizaciones")
    st.markdown("""
    Para obtener el m√°ximo rendimiento del modelo de predicci√≥n de ransomware, es posible aplicar diversas
    optimizaciones avanzadas. Esta secci√≥n detalla las t√©cnicas disponibles para mejorar la precisi√≥n y
    fiabilidad de las predicciones.
    
    ### Funci√≥n: `optimize_hyperparameters_wrapper`
    
    Esta funci√≥n realiza una b√∫squeda sistem√°tica de los mejores hiperpar√°metros para el modelo Prophet.
    
    #### Par√°metros:
    
    - **df**: DataFrame con los datos de entrenamiento.
      - Debe contener al menos las columnas 'ds' (fechas) y 'y' (valores).
    
    - **param_grid**: Diccionario con los rangos de hiperpar√°metros a probar.
      - Define el espacio de b√∫squeda para la optimizaci√≥n.
      - Ejemplo: `{'changepoint_prior_scale': [0.001, 0.01, 0.1, 0.5], 'seasonality_prior_scale': [0.01, 0.1, 1.0, 10.0]}`
    
    - **cv_horizon**: Horizonte para validaci√≥n cruzada en d√≠as.
      - Define cu√°ntos d√≠as hacia el futuro se evaluar√° en cada iteraci√≥n.
      - Valor predeterminado: 30
    
    - **cv_period**: Per√≠odo entre cortes de validaci√≥n cruzada.
      - Define la distancia entre puntos de corte consecutivos.
      - Valor predeterminado: 30
    
    - **metric**: M√©trica a optimizar ('rmse', 'mae', 'smape', 'mape', 'coverage').
      - Define qu√© m√©trica se utilizar√° para seleccionar los mejores hiperpar√°metros.
      - Valor predeterminado: 'rmse'
    
    - **parallel**: Si ejecutar la optimizaci√≥n en paralelo.
      - Puede acelerar significativamente el proceso en sistemas multicore.
      - Valor predeterminado: False
    """)
    
    st.markdown('<div class="guide-code">', unsafe_allow_html=True)
    st.markdown("""
    ```python
    # Optimizaci√≥n b√°sica con par√°metros predeterminados
    best_params = optimize_hyperparameters_wrapper(df)
    
    # Optimizaci√≥n personalizada
    param_grid = {
        'changepoint_prior_scale': [0.001, 0.01, 0.1, 0.5],
        'seasonality_prior_scale': [0.01, 0.1, 1.0, 10.0],
        'holidays_prior_scale': [0.01, 0.1, 1.0, 10.0],
        'seasonality_mode': ['additive', 'multiplicative']
    }
    
    best_params = optimize_hyperparameters_wrapper(
        df,
        param_grid=param_grid,
        cv_horizon=60,
        metric='smape'
    )
    ```
    """)
    st.markdown('</div>', unsafe_allow_html=True)
    
    st.markdown('<div class="guide-tip">', unsafe_allow_html=True)
    st.markdown("""
    #### Hiperpar√°metros clave de Prophet
    
    Prophet tiene varios hiperpar√°metros que pueden ajustarse para mejorar el rendimiento del modelo:
    
    1. **changepoint_prior_scale**:
       - **Funci√≥n**: Controla la flexibilidad de la tendencia.
       - **Valores m√°s altos**: Permiten cambios m√°s abruptos en la tendencia.
       - **Valores m√°s bajos**: Producen una tendencia m√°s suave y estable.
       - **Rango t√≠pico**: 0.001 - 0.5
       - **Impacto**: Afecta principalmente a la capacidad del modelo para capturar cambios en la tendencia.
    
    2. **seasonality_prior_scale**:
       - **Funci√≥n**: Controla la flexibilidad de los componentes estacionales.
       - **Valores m√°s altos**: Permiten patrones estacionales m√°s fuertes.
       - **Valores m√°s bajos**: Suavizan los patrones estacionales.
       - **Rango t√≠pico**: 0.01 - 10.0
       - **Impacto**: Afecta a la magnitud de los patrones estacionales detectados.
    
    3. **holidays_prior_scale**:
       - **Funci√≥n**: Controla el impacto de los d√≠as festivos y eventos especiales.
       - **Valores m√°s altos**: Dan m√°s peso a los efectos de d√≠as festivos.
       - **Valores m√°s bajos**: Reducen la influencia de los d√≠as festivos.
       - **Rango t√≠pico**: 0.01 - 10.0
       - **Impacto**: Crucial cuando los d√≠as festivos tienen un efecto significativo.
    
    4. **seasonality_mode**:
       - **Funci√≥n**: Define c√≥mo se combinan los componentes estacionales con la tendencia.
       - **'additive'**: Los efectos estacionales son constantes en magnitud.
       - **'multiplicative'**: Los efectos estacionales escalan con la tendencia.
       - **Cu√°ndo usar**: 'multiplicative' es mejor cuando la estacionalidad aumenta con el nivel de la serie.
    
    5. **interval_width**:
       - **Funci√≥n**: Define el ancho de los intervalos de predicci√≥n.
       - **Valor t√≠pico**: 0.8 (80%) o 0.95 (95%)
       - **Impacto**: Afecta a la cobertura de los intervalos de confianza.
    
    6. **n_changepoints**:
       - **Funci√≥n**: N√∫mero de puntos de cambio potenciales en la tendencia.
       - **Valores m√°s altos**: Permiten m√°s flexibilidad en la tendencia.
       - **Valores m√°s bajos**: Producen una tendencia m√°s estable.
       - **Valor predeterminado**: 25 para series de m√°s de un a√±o.
    
    #### Estrategias de optimizaci√≥n
    
    1. **B√∫squeda en cuadr√≠cula (Grid Search)**:
       - **Descripci√≥n**: Eval√∫a todas las combinaciones posibles de hiperpar√°metros.
       - **Ventajas**: Exhaustiva, garantiza encontrar el mejor conjunto dentro del espacio definido.
       - **Desventajas**: Computacionalmente costosa para espacios grandes.
       - **Cu√°ndo usar**: Cuando el espacio de b√∫squeda es relativamente peque√±o.
    
    2. **B√∫squeda aleatoria (Random Search)**:
       - **Descripci√≥n**: Eval√∫a combinaciones aleatorias dentro del espacio de hiperpar√°metros.
       - **Ventajas**: M√°s eficiente que la b√∫squeda en cuadr√≠cula para espacios grandes.
       - **Desventajas**: No garantiza encontrar el √≥ptimo global.
       - **Cu√°ndo usar**: Cuando el espacio de b√∫squeda es grande.
    
    3. **Optimizaci√≥n bayesiana**:
       - **Descripci√≥n**: Utiliza modelos probabil√≠sticos para dirigir la b√∫squeda.
       - **Ventajas**: Muy eficiente, aprende de evaluaciones anteriores.
       - **Desventajas**: M√°s compleja de implementar.
       - **Cu√°ndo usar**: Para optimizaciones muy costosas computacionalmente.
    
    #### T√©cnicas avanzadas de modelado
    
    1. **Regresores externos**:
       - **Descripci√≥n**: Incorporar variables adicionales que puedan influir en la actividad de ransomware.
       - **Ejemplos**:
         - N√∫mero de vulnerabilidades (CVE) publicadas
         - Eventos de seguridad importantes
         - Indicadores econ√≥micos
       - **Implementaci√≥n**:
         ```python
         # A√±adir regresor al modelo
         model = Prophet()
         model.add_regressor('cve_count')
         ```
    
    2. **Detecci√≥n y tratamiento de outliers**:
       - **Descripci√≥n**: Identificar y manejar valores at√≠picos que puedan distorsionar el modelo.
       - **T√©cnicas**:
         - Filtrado basado en desviaciones est√°ndar
         - Winsorizaci√≥n (recorte de valores extremos)
         - Imputaci√≥n de valores
       - **Implementaci√≥n**:
         ```python
         # Detectar outliers usando el m√©todo IQR
         Q1 = df['y'].quantile(0.25)
         Q3 = df['y'].quantile(0.75)
         IQR = Q3 - Q1
         df_filtered = df[(df['y'] >= Q1 - 1.5 * IQR) & (df['y'] <= Q3 + 1.5 * IQR)]
         ```
    
    3. **Transformaciones de datos**:
       - **Descripci√≥n**: Aplicar transformaciones matem√°ticas para mejorar las propiedades de los datos.
       - **T√©cnicas comunes**:
         - Transformaci√≥n logar√≠tmica: para series con crecimiento exponencial
         - Transformaci√≥n de Box-Cox: para estabilizar la varianza
         - Diferenciaci√≥n: para hacer la serie estacionaria
       - **Implementaci√≥n**:
         ```python
         # Transformaci√≥n logar√≠tmica (a√±adiendo 1 para manejar ceros)
         df['y'] = np.log1p(df['y'])
         
         # Recordar invertir la transformaci√≥n despu√©s de la predicci√≥n
         forecast['yhat'] = np.expm1(forecast['yhat'])
         ```
    
    4. **Modelado jer√°rquico**:
       - **Descripci√≥n**: Combinar predicciones de m√∫ltiples modelos a diferentes niveles de agregaci√≥n.
       - **Ejemplo**: Modelar ataques por tipo de ransomware y luego agregar.
       - **Ventajas**: Puede capturar patrones espec√≠ficos de cada categor√≠a.
    
    5. **Ensamblado de modelos**:
       - **Descripci√≥n**: Combinar predicciones de m√∫ltiples modelos para mejorar la precisi√≥n.
       - **T√©cnicas**:
         - Promedio simple de predicciones
         - Promedio ponderado basado en rendimiento hist√≥rico
         - Stacking (usar un modelo para combinar predicciones de otros)
    
    #### Optimizaci√≥n del flujo de trabajo
    
    1. **Actualizaci√≥n continua del modelo**:
       - **Descripci√≥n**: Reentrenar regularmente el modelo con nuevos datos.
       - **Frecuencia recomendada**: Diaria o semanal, dependiendo de la volatilidad.
       - **Ventajas**: Mantiene el modelo actualizado con los patrones m√°s recientes.
    
    2. **Monitoreo de rendimiento**:
       - **Descripci√≥n**: Evaluar continuamente la precisi√≥n del modelo en nuevos datos.
       - **M√©tricas clave**: SMAPE, MAE, cobertura de intervalos.
       - **Acci√≥n**: Reoptimizar hiperpar√°metros si el rendimiento se degrada.
    
    3. **Validaci√≥n con expertos**:
       - **Descripci√≥n**: Contrastar predicciones con conocimiento experto en seguridad.
       - **Beneficio**: Identificar predicciones contraintuitivas que puedan indicar problemas.
    
    #### Consideraciones computacionales
    
    1. **Paralelizaci√≥n**:
       - La optimizaci√≥n de hiperpar√°metros puede ser computacionalmente intensiva.
       - Utilice el par√°metro `parallel=True` para acelerar el proceso en sistemas multicore.
    
    2. **Muestreo para pruebas r√°pidas**:
       - Durante la fase de desarrollo, considere usar un subconjunto de datos.
       - Una vez identificados los mejores hiperpar√°metros, reentrenar con todos los datos.
    
    3. **Almacenamiento en cach√©**:
       - Nuestro sistema utiliza el cach√© de Streamlit para evitar rec√°lculos innecesarios.
       - Los resultados de optimizaci√≥n se almacenan para referencia futura.
    
    #### Ejemplo de flujo de trabajo optimizado
    
    1. **Preparaci√≥n de datos**:
       - Detectar y tratar outliers
       - Aplicar transformaciones apropiadas
    
    2. **Optimizaci√≥n inicial**:
       - Realizar una b√∫squeda amplia de hiperpar√°metros
       - Identificar rangos prometedores
    
    3. **Refinamiento**:
       - Realizar una b√∫squeda m√°s detallada en los rangos prometedores
       - Seleccionar los mejores hiperpar√°metros
    
    4. **Entrenamiento final**:
       - Entrenar el modelo con los mejores hiperpar√°metros y todos los datos
       - Incluir regresores externos relevantes
    
    5. **Validaci√≥n**:
       - Realizar backtesting para verificar rendimiento
       - Contrastar con conocimiento experto
    
    6. **Despliegue y monitoreo**:
       - Implementar el modelo optimizado
       - Establecer monitoreo continuo
       - Reentrenar regularmente con nuevos datos
    """)
    st.markdown('</div>', unsafe_allow_html=True)

# Preguntas Frecuentes
st.markdown(f'<div class="guide-section">', unsafe_allow_html=True)
st.header("‚ùì Preguntas Frecuentes", anchor="faq")
st.markdown("""
### Preguntas Generales

#### ¬øQu√© es exactamente este modelo de predicci√≥n de ransomware?

Este modelo utiliza Prophet, una biblioteca de pron√≥stico de series temporales desarrollada por Facebook (Meta), 
para predecir la actividad futura de ataques de ransomware bas√°ndose en datos hist√≥ricos. El modelo identifica 
patrones, tendencias y estacionalidad en los datos para generar predicciones con intervalos de confianza.

#### ¬øQu√© tan precisas son las predicciones?

La precisi√≥n depende de varios factores, incluyendo la calidad y cantidad de datos hist√≥ricos, la volatilidad 
inherente de los ataques de ransomware, y la configuraci√≥n del modelo. T√≠picamente, el modelo puede alcanzar 
un SMAPE (error porcentual absoluto sim√©trico medio) entre 15-30% para horizontes de predicci√≥n a corto plazo. 
La precisi√≥n disminuye naturalmente a medida que el horizonte de predicci√≥n se extiende m√°s hacia el futuro.

#### ¬øPuedo confiar en estas predicciones para tomar decisiones cr√≠ticas de seguridad?

Las predicciones deben considerarse como una herramienta de apoyo a la toma de decisiones, no como una verdad 
absoluta. Recomendamos complementar estas predicciones con conocimiento experto en seguridad, inteligencia de 
amenazas actualizada y buenas pr√°cticas de ciberseguridad. Los intervalos de confianza proporcionan una 
indicaci√≥n de la incertidumbre asociada con cada predicci√≥n.

#### ¬øCon qu√© frecuencia debo actualizar el modelo?

Recomendamos reentrenar el modelo al menos semanalmente con los datos m√°s recientes. En entornos de alta 
volatilidad o cuando surgen nuevas amenazas significativas, puede ser beneficioso actualizar el modelo con 
mayor frecuencia. El sistema est√° dise√±ado para facilitar actualizaciones regulares con m√≠nimo esfuerzo.

### Datos y Preparaci√≥n

#### ¬øQu√© formato deben tener mis datos para usar este modelo?

Los datos deben estar en formato tabular con al menos dos columnas:
1. Una columna de fecha/tiempo (llamada 'ds', 'fecha' o 'date')
2. Una columna num√©rica con el recuento de ataques o incidentes (llamada 'y' o se renombrar√° autom√°ticamente)

Los formatos aceptados incluyen CSV, Excel y JSON. La frecuencia de los datos puede ser diaria, semanal o mensual, 
pero debe ser consistente.

#### ¬øQu√© hago si tengo datos faltantes o valores at√≠picos?

El sistema incluye herramientas para detectar y tratar valores at√≠picos. Para datos faltantes, Prophet puede 
manejarlos naturalmente mediante interpolaci√≥n. Sin embargo, para mejores resultados, considere:

- Para per√≠odos cortos de datos faltantes: Utilice la funcionalidad de detecci√≥n e imputaci√≥n incluida.
- Para valores at√≠picos: Use las herramientas de detecci√≥n de outliers y considere si representan eventos reales 
  (que deber√≠an mantenerse) o errores (que podr√≠an filtrarse).
- Para grandes brechas de datos: Considere si es apropiado modelar los per√≠odos antes y despu√©s de la brecha por separado.

#### ¬øCu√°ntos datos hist√≥ricos necesito para obtener predicciones confiables?

Como regla general:

- M√≠nimo: Al menos 2-3 veces la longitud del ciclo estacional m√°s largo que espera capturar. Por ejemplo, si 
  espera patrones anuales, idealmente necesitar√≠a 2-3 a√±os de datos.
- √ìptimo: Para predicciones diarias con patrones semanales y anuales, 1-2 a√±os de datos diarios proporcionan 
  un buen equilibrio.
- Consideraci√≥n: M√°s datos no siempre son mejores si ha habido cambios fundamentales en los patrones de ataque. 
  En ese caso, considere usar solo datos posteriores al cambio significativo.

### Entrenamiento y Predicci√≥n

#### ¬øC√≥mo elijo el horizonte de predicci√≥n adecuado?

El horizonte de predicci√≥n debe basarse en:

1. **Necesidades operativas**: ¬øPara qu√© plazo necesita planificar?
2. **Calidad de datos**: Horizontes m√°s largos requieren m√°s datos hist√≥ricos de calidad.
3. **Estabilidad del dominio**: En ciberseguridad, donde las t√°cticas evolucionan r√°pidamente, horizontes m√°s 
   cortos (1-3 meses) suelen ser m√°s confiables que predicciones a largo plazo.
4. **Resultados de validaci√≥n**: Examine c√≥mo se degradan las m√©tricas de error a medida que aumenta el horizonte 
   en sus validaciones cruzadas.

Como punto de partida, recomendamos un horizonte de 30-60 d√≠as para predicciones de ransomware, ajustando seg√∫n 
los resultados de validaci√≥n.

#### ¬øQu√© significan todos estos hiperpar√°metros y c√≥mo los ajusto?

Los hiperpar√°metros principales controlan diferentes aspectos del modelo:

- **changepoint_prior_scale**: Controla la flexibilidad de la tendencia. Valores m√°s altos permiten cambios m√°s 
  abruptos. Si ve que el modelo no captura bien cambios importantes en la tendencia, aumente este valor.

- **seasonality_prior_scale**: Controla la fuerza de los componentes estacionales. Valores m√°s altos permiten 
  patrones estacionales m√°s pronunciados. Si los patrones semanales o anuales parecen subestimados, aumente este valor.

- **holidays_prior_scale**: Controla el impacto de eventos especiales. Aumente este valor si ciertos d√≠as o 
  eventos tienen un impacto significativo en los ataques.

- **seasonality_mode**: Use 'multiplicative' si la magnitud de los patrones estacionales aumenta con el nivel 
  general de ataques, de lo contrario use 'additive'.

La funci√≥n `optimize_hyperparameters_wrapper` puede ayudarle a encontrar autom√°ticamente los mejores valores 
para estos par√°metros.

#### ¬øPor qu√© mis intervalos de predicci√≥n son tan amplios?

Los intervalos amplios indican alta incertidumbre, que puede deberse a:

1. **Alta variabilidad en los datos hist√≥ricos**: Series con grandes fluctuaciones naturalmente producen 
   intervalos m√°s amplios.
2. **Datos limitados**: Menos datos hist√≥ricos generalmente resultan en mayor incertidumbre.
3. **Cambios estructurales recientes**: Si ha habido cambios fundamentales recientes, el modelo puede tener 
   dificultades para hacer predicciones confiables.
4. **Horizonte largo**: La incertidumbre aumenta naturalmente con horizontes de predicci√≥n m√°s largos.

Para reducir la amplitud de los intervalos:
- Considere ajustar `interval_width` a un valor menor (por defecto es 0.8 o 80%)
- Optimice los hiperpar√°metros del modelo
- Incluya regresores externos relevantes si est√°n disponibles
- Considere transformaciones de datos para estabilizar la varianza

### Evaluaci√≥n e Interpretaci√≥n

#### ¬øC√≥mo s√© si mi modelo est√° funcionando bien?

Eval√∫e su modelo utilizando m√∫ltiples enfoques:

1. **M√©tricas cuantitativas**:
   - SMAPE < 20% generalmente indica buen rendimiento para predicciones de ransomware
   - Cobertura de intervalos cercana al nivel de confianza especificado (ej. 80% para interval_width=0.8)

2. **Validaci√≥n visual**:
   - Las predicciones siguen patrones hist√≥ricos conocidos
   - Los componentes descompuestos (tendencia, estacionalidad) tienen sentido intuitivo

3. **Backtesting**:
   - El modelo predice con precisi√≥n per√≠odos hist√≥ricos conocidos cuando se entrena con datos hasta cierto punto

4. **Validaci√≥n de expertos**:
   - Las predicciones se alinean con la intuici√≥n de expertos en seguridad
   - Las anomal√≠as detectadas corresponden a eventos reales conocidos

#### ¬øC√≥mo interpreto los componentes del modelo?

Los componentes principales que puede analizar son:

1. **Tendencia**: Representa la direcci√≥n general a largo plazo. Un aumento sostenido indica crecimiento en 
   la actividad de ransomware, mientras que una disminuci√≥n sugiere reducci√≥n.

2. **Estacionalidad**: Muestra patrones c√≠clicos predecibles:
   - Estacionalidad semanal: Identifica d√≠as de la semana con mayor/menor actividad
   - Estacionalidad anual: Revela meses o temporadas con patrones distintivos

3. **D√≠as festivos/Eventos**: Muestra el impacto de eventos espec√≠ficos en la actividad de ransomware.

4. **Puntos de cambio**: Identifica momentos donde la tendencia cambi√≥ significativamente, que pueden 
   corresponder a nuevas variantes de ransomware, t√©cnicas de ataque o contramedidas.

#### ¬øQu√© m√©tricas de evaluaci√≥n debo priorizar?

Dependiendo de su caso de uso:

- **SMAPE (Error Porcentual Absoluto Sim√©trico Medio)**: Buena m√©trica general que funciona bien incluso con 
  valores cercanos a cero. Priorice esta m√©trica para uso general.

- **MAE (Error Absoluto Medio)**: √ötil cuando le interesa el error absoluto en n√∫mero de ataques, independientemente 
  de la magnitud base.

- **Cobertura de intervalos**: Cr√≠tica si est√° utilizando los intervalos de confianza para planificaci√≥n de 
  contingencia. Una cobertura cercana al nivel de confianza especificado indica intervalos bien calibrados.

- **RMSE (Error Cuadr√°tico Medio)**: √ötil cuando errores grandes son particularmente problem√°ticos, ya que 
  penaliza m√°s los errores grandes que los peque√±os.

- **MSE (Error Cuadr√°tico Medio)**: √ötil para comparaciones matem√°ticas.

### Problemas Comunes

#### El modelo no captura bien los picos extremos en mis datos

Prophet est√° dise√±ado para capturar tendencias generales y patrones estacionales, no necesariamente eventos 
extremos √∫nicos. Para mejorar el manejo de picos:

1. Considere a√±adir eventos especiales usando la funcionalidad de d√≠as festivos de Prophet
2. Experimente con valores m√°s altos de `changepoint_prior_scale` para permitir cambios m√°s abruptos
3. Para eventos verdaderamente √∫nicos, considere modelarlos por separado o marcarlos como outliers
4. Pruebe el modo de estacionalidad multiplicativa si los picos escalan con el nivel general

#### Las predicciones parecen demasiado suavizadas y no reflejan la volatilidad real

Si sus predicciones son demasiado "planas" comparadas con la volatilidad hist√≥rica:

1. Aumente `changepoint_prior_scale` para permitir m√°s flexibilidad en la tendencia
2. Aumente `seasonality_prior_scale` para capturar patrones estacionales m√°s fuertes
3. Considere si el modo de estacionalidad (`additive` vs `multiplicative`) es apropiado
4. Verifique si hay regresores externos que podr√≠an explicar parte de la volatilidad

#### El rendimiento del modelo se degrada con el tiempo

Si nota que las predicciones recientes son menos precisas que las anteriores:

1. Reentrenar regularmente el modelo con datos nuevos
2. Considere si ha habido cambios fundamentales en el panorama de amenazas
3. Reeval√∫e y reoptimice los hiperpar√°metros peri√≥dicamente
4. Considere dar m√°s peso a datos recientes o usar una ventana m√≥vil de entrenamiento

#### ¬øC√≥mo puedo incorporar informaci√≥n sobre nuevas vulnerabilidades o amenazas?

Para incorporar informaci√≥n sobre nuevas amenazas:

1. **Regresores externos**: A√±ada datos sobre conteo de CVEs, menciones en medios, u otros indicadores como regresores
2. **Eventos especiales**: Marque fechas de divulgaci√≥n de vulnerabilidades importantes como "d√≠as festivos"
3. **Actualizaci√≥n frecuente**: Reentrenar el modelo cuando surjan nuevas amenazas significativas
4. **Ajuste manual**: Para amenazas muy recientes, considere ajustar manualmente las predicciones bas√°ndose en conocimiento experto

### Integraci√≥n y Flujo de Trabajo

#### ¬øC√≥mo puedo integrar estas predicciones en mi flujo de trabajo de seguridad?

Las predicciones pueden integrarse de varias maneras:

1. **Planificaci√≥n de recursos**: Utilice las predicciones para ajustar la asignaci√≥n de personal de seguridad
2. **Programaci√≥n de actualizaciones**: Programe actualizaciones cr√≠ticas durante per√≠odos previstos de baja actividad
3. **Alertas proactivas**: Configure umbrales de alerta basados en predicciones para prepararse para per√≠odos de alto riesgo
4. **Informes de riesgo**: Incluya predicciones en informes peri√≥dicos de riesgo para la direcci√≥n
5. **Automatizaci√≥n**: Ajuste autom√°ticamente niveles de monitoreo basados en predicciones

#### ¬øPuedo exportar los resultados para usarlos en otras herramientas?

S√≠, los resultados pueden exportarse en varios formatos:

1. **CSV**: Para an√°lisis en Excel, R, Python u otras herramientas
2. **JSON**: Para integraci√≥n con aplicaciones web o dashboards
3. **Im√°genes**: Los gr√°ficos pueden guardarse como PNG para informes
4. **API**: Para usuarios avanzados, es posible configurar una API para acceder a predicciones en tiempo real

Utilice los botones de descarga en la interfaz para exportar datos y visualizaciones.

#### ¬øC√≥mo puedo automatizar todo este proceso?

Para automatizar el flujo de trabajo:

1. **Scripts programados**: Cree scripts Python que ejecuten todo el proceso (carga, entrenamiento, predicci√≥n, evaluaci√≥n)
2. **Tareas programadas**: Configure tareas programadas (cron jobs en Linux, Task Scheduler en Windows) para ejecutar los scripts
3. **Pipelines de datos**: Implemente pipelines que actualicen autom√°ticamente los datos de entrada
4. **Notificaciones**: Configure alertas autom√°ticas basadas en predicciones o cambios significativos
5. **Almacenamiento de resultados**: Guarde autom√°ticamente predicciones y evaluaciones en una base de datos para seguimiento hist√≥rico

Para usuarios avanzados, considere implementar el modelo en un entorno de producci√≥n con CI/CD para actualizaciones continuas.
""")
st.markdown('</div>', unsafe_allow_html=True)
st.markdown('</div>', unsafe_allow_html=True)


def main():
    show_user_guide()

if __name__ == "__main__":
    main()
